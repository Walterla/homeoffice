<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.hbm2ddl.auto=update
                hibernate.query.substitutions=true 'Y', false 'N'
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- Transaction template for Managers, from:
         http://blog.exis.com/colin/archives/2004/07/31/concise-transaction-definitions-spring-11/ -->
    <bean id="txProxyTemplate" abstract="true"
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
    </bean>


    <!-- register HibernateExtensionPostProcessor -->
    <bean class="org.appfuse.dao.spring.HibernateExtensionPostProcessor">
        <property name="annotatedClasses">
            <list>
                <value>org.dlw.model.Contact</value>
                <value>org.dlw.model.Business</value>
                <value>org.dlw.model.account.Account</value>
                <value>org.dlw.model.account.AccountDetail</value>
                <value>org.dlw.model.vehicle.Vehicle</value>
                <value>org.dlw.model.vehicle.VehicleMaintenance</value>
            </list>
        </property>
    </bean>

    <!-- generic dao and manager registration -->
    <bean id="contactManager" class="org.appfuse.service.impl.GenericManagerImpl">
        <constructor-arg>
            <bean class="org.appfuse.dao.hibernate.GenericDaoHibernate" autowire="byType">
                <constructor-arg value="org.dlw.model.Contact"/>
            </bean>
        </constructor-arg>
    </bean>
    <bean id="businessManager" class="org.appfuse.service.impl.GenericManagerImpl">
        <constructor-arg>
            <bean class="org.appfuse.dao.hibernate.GenericDaoHibernate" autowire="byType">
                <constructor-arg value="org.dlw.model.Business"/>
            </bean>
        </constructor-arg>
    </bean>
<!--
    <bean id="accountManager" class="org.appfuse.service.impl.GenericManagerImpl">
        <constructor-arg>
            <bean class="org.appfuse.dao.hibernate.GenericDaoHibernate" autowire="byType">
                <constructor-arg value="org.dlw.model.account.Account"/>
            </bean>
        </constructor-arg>
    </bean>
-->
    <bean id="vehicleManager" class="org.dlw.service.impl.VehicleManagerImpl">
        <property name="dao" ref="vehicleDao"/>
    </bean>

    <bean id="vehicleDao" class="org.dlw.dao.hibernate.VehicleDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="vehicleMaintenanceManager" class="org.dlw.service.impl.VehicleMaintenanceManagerImpl">
        <property name="dao" ref="vehicleMaintenanceDao"/>
    </bean>

    <bean id="vehicleMaintenanceDao" class="org.dlw.dao.hibernate.VehicleMaintenanceDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- struts action registration -->
    <bean id="contactAction" class="org.dlw.action.ContactAction" scope="prototype">
        <property name="contactManager" ref="contactManager"/>
    </bean>
    <bean id="businessAction" class="org.dlw.action.BusinessAction" scope="prototype">
        <property name="businessManager" ref="businessManager"/>
    </bean>
<!--
    <bean id="accountAction" class="org.dlw.action.account.AccountAction" scope="prototype">
        <property name="accountManager" ref="accountManager"/>
    </bean>
-->
    <bean id="vehicleAction" class="org.dlw.action.vehicle.VehicleAction" scope="prototype">
        <property name="vehicleManager" ref="vehicleManager"/>
    </bean>
    <bean id="vehicleMaintenanceAction" class="org.dlw.action.vehicle.VehicleMaintenanceAction" scope="prototype">
        <property name="vehicleMaintenanceManager" ref="vehicleMaintenanceManager"/>
    </bean>
</beans>
